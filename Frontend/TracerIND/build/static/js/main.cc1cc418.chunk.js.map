{"version":3,"sources":["components/CircularProgressBar/CircularProgressBar.js","components/Home/Home.js","components/About/About.js","components/Sidebar/Sidebar.js","components/Dashboard/Dashboard.js","components/PHC/PHC.js","components/VillageSecretariat/VillageSec.js","components/Village/Village.js","services/authentication.service.js","helpers/auth-header.js","helpers/handle-response.js","helpers/history.js","components/BasicDetailsForm/BasicDetailsForm.js","components/TestDetailsForm/TestDetailsForm.js","components/HospitalDetailsForm/HospitalDetailsForm.js","components/FormSuccess/FormSuccess.js","components/MainForm/MainForm.js","components/GenericTable/GenericTable.js","components/Directory/Directory.js","components/Error404/Error404.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/Login/Login.js","App.js","serviceWorker.js","helpers/fake-backend.js","index.js","assets/logo_transparent.png"],"names":["CircularProgressBar","props","state","sqSize","this","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","width","height","className","cx","cy","r","transform","style","strokeDasharray","strokeDashoffset","x","y","dy","textAnchor","React","Component","defaultProps","Circle","handleChangeEvent","bind","event","setState","target","value","Home","Container","Jumbotron","Row","Col","xs","sm","About","backgroundImage","color","marginTop","padding","smoffset","href","Dashboard","Fragment","id","pageWrapId","outerContainerId","PHC","useEffect","phcValue","document","getElementById","handleChange","fetchVillageSec","phcList","length","Form","Control","as","onChange","map","phc","i","name","key","VillageSec","villageSecValue","fetchVillages","villageSecList","villageSec","Village","villageValue","updateValue","village","villageList","village_id","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","URI","process","authenticationService","login","username","password","axios","post","then","handleResponse","user","userData","token","timestamp","Date","setItem","stringify","next","logout","removeItem","refresh","data","newData","currentUser","asObservable","authHeader","currentUserValue","Authorization","response","status","indexOf","window","location","reload","history","createBrowserHistory","BasicDetailsForm","uri","componentDidMount","adhaarNumber","getValue","adhaarFirst","substring","adhaarSecond","adhaarThird","input","fetchOrUpdatePHCList","mandal","village_sec","console","log","headers","catch","err","fetchOrUpdateVillageSecList","fetchOrUpdateVillageList","validate","validIds","invalidIds","adhaarIds","filled","push","Boolean","surname","relation","gaurdian_name","age","gender","maritalstatus","bloodgroup","PVGT","phone","border","focus","Error","saveData","changeData","formName","a","dataToSave","adhaar","address","children","deworming","Promise","resolve","loadNextForm","restrictDigits","strValue","toString","Number","includes","changeAdhaarFocus","updateState","valueObj","styles","center","textAlign","paddingLeft","left","right","Group","Label","min","max","type","placeholder","Check","label","checked","display","controlId","Button","variant","onClick","TestDetailsForm","previous","validateOneDigitAfterDecimalSerumCreatine","index","validateOneDigitAfterDecimalBloodUrea","validateOneDigitAfterDecimalUricAcid","validateOneDigitAfterDecimalElectrolytesSodium","validateOneDigitAfterDecimalElectrolytesPotassium","validateOneDigitAfterDecimalBun","validateAndNext","mandatoryFieldCheck","kidneystatus","doctorreq","dialysis","validateAndSubmit","submit","serumCreatinineAfterReRendering","serumCreatinine","bloodUreaAfterReRendering","bloodUrea","uricAcidfterReRendering","uricAcid","electrolytesSodiumReRendering","electrolytes_sodium","electrolytesPotassiumReRendering","electrolytes_potassium","bunReRendering","bun","dateoftesting","pedalEdema","pedaltype","ailments","opd","paddingRight","HospitalDetailsForm","handleReferredTo","referredToSelected","referredto","hospitalAdmit","dateOfAdmit","refered","treatmentDone","discharge","dischargeStatus","deceased","deathDate","placeOfDeath","causeOfDeath","recovery","otherReferedHospitalName","rows","class","FormSuccess","icon","faCheckCircle","size","marginBottom","MainForm","generatePkid","result","characters","charactersLength","charAt","floor","random","appendState","childState","callback","undefined","submitForm","kid","dataToSend","pkid","referred","type_data","firstName","alert","GenericTable","handleSearchChange","idFragments","split","obj","dataType","dataTypes","keys","MIN_VALUE","MAX_VALUE","isNotNullOrUndefinedOrBlank","clearFilters","changeNoOfRows","abs","noOfRows","nextPage","currentPageIndex","previousPage","stateObj","loading","pageData","dataLength","lastPageIndex","slice","filter","rowData","toLowerCase","disabled","Table","striped","bordered","hover","header","colSpan","inputType","row","indexRow","indexCol","Directory","getVillageNameFromId","searchField","patientList","get","responseVillage","structuredData","patient","newPatient","Error404","seconds","setInterval","innerHTML","clearInterval","faTimesCircle","Header","Navbar","collapseOnSelect","expand","Brand","alt","src","logo","Toggle","aria-controls","Collapse","Nav","Link","faHome","faChartLine","faUserPlus","faList","faInfoCircle","PrivateRoute","component","rest","render","to","pathname","from","Login","error","md","margin","App","refreshAuth","getTime","subscribe","exact","path","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","users","lastName","realFetch","fetch","url","opts","isLoggedIn","reject","setTimeout","endsWith","method","params","body","find","ok","message","text","configureFakeBackend","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.cc1cc418.chunk.js","sourcesContent":["import React from 'react';\nimport './Circle.css';\n\n\nclass CircularProgressBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        // Size of the enclosing square\n        const sqSize = this.props.sqSize;\n        // SVG centers the stroke width on the radius, subtract out so circle fits in square\n        const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\n        // Enclose cicle in a circumscribing square\n        const viewBox = `0 0 ${sqSize} ${sqSize}`;\n        // Arc length at 100% coverage is the circle circumference\n        const dashArray = radius * Math.PI * 2;\n        // Scale 100% coverage overlay with the actual percent\n        const dashOffset = dashArray - dashArray * this.props.percentage / 100;\n\n        return (\n            <svg\n                width={this.props.sqSize}\n                height={this.props.sqSize}\n                viewBox={viewBox}>\n                <circle\n                    className=\"circle-background\"\n                    cx={this.props.sqSize / 2}\n                    cy={this.props.sqSize / 2}\n                    r={radius}\n                    strokeWidth={`${this.props.strokeWidth}px`} />\n                <circle\n                    className=\"circle-progress\"\n                    cx={this.props.sqSize / 2}\n                    cy={this.props.sqSize / 2}\n                    r={radius}\n                    strokeWidth={`${this.props.strokeWidth}px`}\n                    // Start progress marker at 12 O'Clock\n                    transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props.sqSize / 2})`}\n                    style={{\n                        strokeDasharray: dashArray,\n                        strokeDashoffset: dashOffset\n                    }} />\n                <text\n                    className=\"circle-text\"\n                    x=\"50%\"\n                    y=\"50%\"\n                    dy=\".3em\"\n                    textAnchor=\"middle\">\n                    {`${this.props.percentage}%`}\n                </text>\n            </svg>\n        );\n    }\n}\n\nCircularProgressBar.defaultProps = {\n    sqSize: 200,\n    percentage: 25,\n    strokeWidth: 10\n};\n\nclass Circle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            percentage: this.props.percentage ? this.props.percentage : 25\n        };\n\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    }\n\n    handleChangeEvent(event) {\n        this.setState({\n            percentage: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <CircularProgressBar\n                    strokeWidth=\"10\"\n                    sqSize=\"200\"\n                    percentage={this.state.percentage} />\n                {/* <div>\n                    <input\n                        id=\"progressInput\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        step=\"1\"\n                        value={this.state.percentage}\n                        onChange={this.handleChangeEvent} />\n                </div> */}\n            </div>\n        );\n    }\n}\n\n\nexport default Circle;\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col} from 'react-bootstrap';\nimport './Home.css';\nimport Circle from '../CircularProgressBar/CircularProgressBar';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <Container>\n                <Jumbotron>\n                    <h2>Welcome to TracerIND</h2>\n                </Jumbotron>\n                <Row className=\"show-grid text-center\">\n                    <Col xs={12} sm={4} className=\"home-col\">\n                        <Circle percentage=\"40\" />\n                        <br/>\n                        <h4>Active</h4>\n                    </Col>\n                    <Col xs={12} sm={4} className=\"home-col\">\n                        <Circle percentage=\"45\" />\n                        <br/>\n                        <h4>Recovered</h4>\n                    </Col>\n                    <Col xs={12} sm={4} className=\"home-col\">\n                        <Circle percentage=\"15\" />\n                        <br/>\n                        <h4>Deaths</h4>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Container, Col, Row } from 'react-bootstrap';\nimport './About.css';\n\nexport default class About extends Component {\n    render() {\n        return (\n            <Container>\n\n                <fieldset style={{ backgroundImage: \"linear-gradient(to right top, #7a9e7e, #3d7b74, #0a5767, #0c314d, #160c28)\", color: \"white\", marginTop: \"10%\" }}>\n                    <Row style={{padding: \"1rem\"}}>\n                        <Col xs={12} sm={8} smoffset={2}>\n                            <h3>About TracerIND Team </h3>\n                            <ul>\n                              <li>Leads</li>\n                                  <ul>\n                                  <li>Shlok Parida</li>\n                                  <li>Prakruti Chandak </li>\n                                    <li>Abhishek Prasad</li>\n                                </ul>\n                                 <br/>\n                                  <li>Frontend Developers (ReactJS)</li>\n                                  <ul>\n                                  <li>Abhishek Prasad</li>\n                                  <li>Hrituja Khatavkar</li>\n                                  <li>Gaurav Roy</li>\n\n                                </ul>\n                                <br/>\n\n                                  <li>Android Developers</li>\n                                  <ul>\n                                  <li>Akshat Rawat</li>\n                                  <li>Shubhankar</li>\n                                </ul>\n                                <br/>\n                              <li>Backend Developers(Django)</li>\n                                  <ul>\n                                  <li>Shlok Parida</li>\n                                  <li>Prakruti Chandak </li>\n                                  </ul>\n                                  </ul>\n\n                        </Col>\n                        <Col xs={12} sm={4} className=\"sidebar-section\">\n                            <h4>Contact Us!</h4>\n                            <p>Email: </p>\n                            <p>Phone </p>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container >\n        )\n    }\n}\n","import React from \"react\";\nimport { push as Menu } from \"react-burger-menu\";\nimport './Sidebar.css'\n\n\nexport default props => {\n  return (\n    // Pass on our props\n    <Menu {...props}>\n    <a className=\"menu-item\" href=\"/patient-tracker\">\n      Patient Tracker\n    </a>\n\n    <a className=\"menu-item\" href=\"/health-stats\">\n      Health Stats\n    </a>\n\n    <a className=\"menu-item\" href=\"/pvtg-tracker\">\n      PVTG Tracker\n    </a>\n\n    <a className=\"menu-item\" href=\"/pedal-edema-tracker\">\n      Pedal Edema Tracker\n    </a>\n    </Menu>\n  );\n};\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './Dashboard.css';\n\nimport SideBar from '../Sidebar/Sidebar';\n\nexport default class Dashboard extends Component {\n    render() {\n        return (\n            <React.Fragment>\n            <div id = \"App\">\n                       <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n                       <div id=\"page-wrap\">\n\n                    <Container>\n                        <Row style={{marginTop: \"40vh\"}}>\n                            {/* <Col xs={12} sm={8} className=\"main-section\">\n                                <p>I spend a lot of time walking around in the woods and talking to trees, and squirrels, and little rabbits and stuff. The secret to doing anything is believing that you can do it. Anything that you believe you can do strong enough, you can do. Anything. As long as you believe. Just go out and talk to a tree. Make friends with it. I guess that would be considered a UFO. A big cotton ball in the sky. Tree trunks grow however makes them happy. In nature, dead trees are just as normal as live trees.</p>\n                                <p>Sometimes you learn more from your mistakes than you do from your masterpieces. Here's something that's fun. If you overwork it you become a cloud killer. There's nothing worse than a cloud killer. These trees are so much fun. I get started on them and I have a hard time stopping.</p>\n                                <p>Trees grow in all kinds of ways. They're not all perfectly straight. Not every limb is perfect. You can't make a mistake. Anything that happens you can learn to use - and make something beautiful out of it. The light is your friend. Preserve it. If these lines aren't straight, your water's going to run right out of your painting and get your floor wet.</p>\n                                <p>Anyone can paint. This is the way you take out your flustrations. This is where you take out all your hostilities and frustrations. It's better than kicking the puppy dog around and all that so.</p>\n                                <p>Water's like me. It's laaazy ... Boy, it always looks for the easiest way to do things Let's make some happy little clouds in our world. This is a happy place, little squirrels live here and play. We'll do another happy little painting. A fan brush is a fantastic piece of equipment. Use it. Make friends with it. We might as well make some Almighty mountains today as well, what the heck.</p>\n                            </Col>\n                            <Col xs={12} sm={4} className=\"sidebar-section\">\n                                <p>I spend a lot of time walking around in the woods and talking to trees, and squirrels, and little rabbits and stuff. The secret to doing anything is believing that you can do it. Anything that you believe you can do strong enough, you can do. Anything. As long as you believe. Just go out and talk to a tree. Make friends with it. I guess that would be considered a UFO. A big cotton ball in the sky. Tree trunks grow however makes them happy. In nature, dead trees are just as normal as live trees.</p>\n                            </Col> */}\n                            <Col>\n                                <h1>\n                                        Coming Soon..\n                                </h1>\n                            </Col>\n                        </Row>\n                    </Container>\n                    </div>\n                    </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\nexport default function PHC(props) {\n\n    React.useEffect(() => {\n        if (props.phcValue) {\n            document.getElementById(props.id).value = props.phcValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillageSec(event.target.value);\n    }\n\n    let { phcList } = props;\n    if (!phcList) {\n        phcList = [];\n    }\n    if (phcList.length > 0) {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select PHC</option>\n                {\n                    phcList.map((phc, i) => {\n                        return (\n                            <option value={phc.name} key={i}>{phc.name}</option>\n                        )\n                    })\n                }\n            </Form.Control>\n        )\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select Mandal First</option>\n            </Form.Control>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\nexport default function VillageSec(props) {\n\n    React.useEffect(() => {\n        if (props.villageSecValue) {\n            document.getElementById(props.id).value = props.villageSecValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillages(event.target.value);\n    }\n\n    let { villageSecList } = props;\n\n    if (!villageSecList) {\n        villageSecList = [];\n    }\n\n    if (villageSecList.length > 0) {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select Village Secretariat</option>\n                {\n                    villageSecList.map((villageSec, i) => {\n                        return (\n                            <option value={villageSec.name} key={i}>{villageSec.name}</option>\n                        )\n                    })\n                }\n            </Form.Control>\n        )\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select PHC first</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\nexport default function Village(props) {\n\n    React.useEffect(() => {\n        if (props.villageValue) {\n            document.getElementById(props.id).value = props.villageValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.updateValue({ village: event.target.value });\n    }\n\n    let { villageList } = props;\n\n    if (!villageList) {\n        villageList = [];\n    }\n\n    if (villageList.length > 0) {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select Village</option>\n                {\n                    villageList.map((village, i) => {\n                        return (\n                            <option value={village.village_id} key={i}>{village.name}</option>\n                        )\n                    })\n                }\n            </Form.Control>\n        )\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Select Village Sec. First</option>\n            </Form.Control>\n        )\n    }\n}","import { BehaviorSubject } from 'rxjs';\n\nimport { handleResponse } from '../helpers';\n\nimport axios from 'axios';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nconst URI = process.env.REACT_APP_SERVER_URI;\n\nexport const authenticationService = {\n    login,\n    logout,\n    refresh,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n    // const requestOptions = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({ username, password })\n    // };\n\n    return axios.post(URI + 'token_jwt_get/', { username, password })\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            if(user){\n                let userData = {\n                    username,\n                    token: user.token,\n                    timestamp: new Date()\n                }\n                localStorage.setItem('currentUser', JSON.stringify(userData));\n                currentUserSubject.next(userData);\n\n                return user;\n            }\n        });\n}\n\nfunction refresh() {\n    // console.log(\"in refresh method\");\n    // console.log(currentUserSubject.value);\n    if(currentUserSubject.value){\n        axios.post(URI + 'token_jwt_refresh/', { token: currentUserSubject.value.token })\n            .then(handleResponse)\n            .then(data => {\n                if(data) {\n                    let newData = { ...currentUserSubject.value };\n                    newData.token = data.token;\n                    newData.timestamp = new Date();\n\n                    localStorage.setItem('currentUser', JSON.stringify(newData));\n                    currentUserSubject.next(newData);\n                }\n            });\n        // return true;\n    }\n    // else{\n    //     return true;\n    // }\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `JWT ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","import { authenticationService } from '../services';\n\nexport function handleResponse(response) {\n    // return response.text().then(text => {\n    //     const data = text && JSON.parse(text);\n    //     if (!response.ok) {\n    //         if ([400, 401, 403].indexOf(response.status) !== -1) {\n    //             // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n    //             authenticationService.logout();\n    //             window.location.reload();\n    //         }\n\n    //         const error = (data && data.message) || response.statusText;\n    //         return Promise.reject(error);\n    //     }\n\n    //     return data;\n    // });\n    // console.log(response);\n    if(response.status === 200){\n        return response.data;\n    }\n    if([400, 401, 403].indexOf(response.status) !== -1){\n        authenticationService.logout();\n        window.location.reload();\n        return false;\n    }\n    return response.data;\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from 'react';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PHC from '../PHC/PHC';\nimport VillageSec from '../VillageSecretariat/VillageSec';\nimport Village from '../Village/Village';\nimport axios from 'axios';\n\nimport { authHeader } from '../../helpers';\n\nimport './BasicDetailsForm.css';\nclass BasicDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaarFirst: \"\",\n            adhaarSecond: \"\",\n            adhaarThird: \"\",\n            mandal: props.getValue('mandal'),\n            phc: props.getValue('phc'),\n            village_sec: props.getValue('village_sec'),\n            village: props.getValue('village'),\n            name: props.getValue('name'),\n            surname: props.getValue('surname'),\n            relation: props.getValue('relation'),\n            gaurdian_name: props.getValue('gaurdian_name'),\n            age: props.getValue('age'),\n            gender: props.getValue('gender'),\n            maritalstatus: props.getValue('maritalstatus'),\n            phone: props.getValue('phone'),\n            bloodgroup: props.getValue('bloodgroup'),\n            PVGT: props.getValue('PVGT'),\n            address: props.getValue('address'),\n            deworming: props.getValue('deworming'),\n            phcList: props.getValue('phcList'),\n            villageList: props.getValue('villageList'),\n            villageSecList: props.getValue('villageSecList')\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount = () => {\n        let adhaarNumber = this.props.getValue('adhaar');\n        if (adhaarNumber) {\n            this.setState({ adhaarFirst: adhaarNumber.substring(0, 4) });\n            this.setState({ adhaarSecond: adhaarNumber.substring(4, 8) });\n            this.setState({ adhaarThird: adhaarNumber.substring(8, 12) });\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    fetchOrUpdatePHCList = event => {\n        this.setState(\n            {\n                mandal: event.target.value,\n                phcList: [],\n                phc: \"\",\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\"\n            }\n        );\n        if (event.target.value) {\n            console.log(\"Getting phcs\");\n            axios.post(this.uri + 'GetPHCData/'\n                , {\n                    mandal: event.target.value\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ phcList: response.data });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageSecList = (phc) => {\n        this.setState(\n            {\n                phc: phc,\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\"\n            }\n        );\n        if (phc) {\n            console.log(\"Getting village secs\");\n            axios.post(this.uri + 'GetVillageSecData/',\n                {\n                    PHC: phc\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageSecList: response.data });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageList = (villageSec) => {\n        this.setState({ villageList: [], village: \"\", village_sec: villageSec });\n        if (villageSec) {\n            console.log(\"Getting villages\");\n            axios.post(this.uri + 'GetVillageData/',\n                {\n                    village_sec: villageSec\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageList: response.data });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    validate = () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        let validIds = [];\n        let invalidIds = [];\n        try {\n            //Adhaar fields validation\n            let adhaarIds = [\"adhaarFirst\", \"adhaarSecond\", \"adhaarThird\"];\n            let filled = false;\n            for (let i = 0; i < adhaarIds.length; i++) {\n                if (this.state[adhaarIds[i]] !== \"\") {\n                    filled = true;\n                    break;\n                }\n            }\n            if (filled) {\n                for (let i = 0; i < adhaarIds.length; i++) {\n                    if (this.state[adhaarIds[i]].length < 4) {\n                        invalidIds.push(adhaarIds[i]);\n                    }\n                    else {\n                        validIds.push(adhaarIds[i]);\n                    }\n                }\n            }\n            //Other field validations\n            Boolean(this.state.mandal) ? validIds.push('mandal') : invalidIds.push('mandal');\n            Boolean(this.state.phc) ? validIds.push('phc') : invalidIds.push('phc');\n            Boolean(this.state.village_sec) ? validIds.push('village_sec') : invalidIds.push('village_sec');\n            Boolean(this.state.village) ? validIds.push('village') : invalidIds.push('village');\n            Boolean(this.state.name) ? validIds.push('name') : invalidIds.push('name');\n            Boolean(this.state.surname) ? validIds.push('surname') : invalidIds.push('surname');\n            Boolean(this.state.relation) ? validIds.push('relation') : invalidIds.push('relation');\n            Boolean(this.state.gaurdian_name) ? validIds.push('gaurdian_name') : invalidIds.push('gaurdian_name');\n            Boolean(this.state.age) ? validIds.push('age') : invalidIds.push('age');\n            Boolean(this.state.gender) ? validIds.push('gender') : invalidIds.push('gender');\n            Boolean(this.state.maritalstatus) ? validIds.push('maritalstatus') : invalidIds.push('maritalstatus');\n            Boolean(this.state.bloodgroup) ? validIds.push('bloodgroup') : invalidIds.push('bloodgroup');\n            Boolean(this.state.PVGT) ? validIds.push('PVGT') : invalidIds.push('PVGT');\n            if (this.state.phone === \"\" || this.state.phone.length !== 10) {\n                invalidIds.push('phone');\n            }\n            else {\n                validIds.push('phone');\n            }\n            for (let i = 0; i < validIds.length; i++) {\n                document.getElementById(validIds[i]).style.border = \"\";\n            }\n            if (invalidIds.length > 0) {\n                window.location.href = \"#\" + invalidIds[0];\n                for (let i = 0; i < invalidIds.length; i++) {\n                    document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                }\n                document.getElementById(invalidIds[0]).focus();\n                throw new Error();\n            }\n            else {\n                window.location.href = \"#\";\n            }\n            //Still in try block? Means all fields valid. Now saving the data to parent component.\n            this.saveData();\n            this.props.changeData({ formName: \"TestDetails\" });\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    saveData = async () => {\n        let dataToSave = {\n            adhaar: this.state.adhaarFirst + this.state.adhaarSecond + this.state.adhaarThird,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            village_sec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVGT: this.state.PVGT,\n            address: this.state.address,\n            children: this.state.children,\n            deworming: this.state.deworming,\n            phcList: this.state.phcList,\n            villageList: this.state.villageList,\n            villageSecList: this.state.villageSecList\n        }\n\n        await new Promise(resolve => this.props.changeData(dataToSave, () => resolve()));\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    restrictDigits = length => event => {\n        let strValue = event.target.value.toString();\n        if (strValue.length > length) {\n            event.target.value = Number(strValue.substring(0, length));\n        }\n        this.setState({ [event.target.id]: event.target.value.toString() });\n        if (event.target.id.includes('adhaar')) {\n            this.changeAdhaarFocus(event.target.id, event.target.value);\n        }\n    }\n\n    updateState = (valueObj) => {\n        this.setState(valueObj);\n    }\n\n    changeAdhaarFocus = (id, value) => {\n        if (id === 'adhaarFirst' && value.length === 4) {\n            document.getElementById('adhaarSecond').focus();\n        }\n        else if (id === 'adhaarSecond' && value.length === 4) {\n            document.getElementById('adhaarThird').focus();\n        }\n    }\n\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Basic Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3} xs={12}>\n                                        <Form.Label>Aadhar Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarFirst\"\n                                            value={this.state.adhaarFirst}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarSecond\"\n                                            value={this.state.adhaarSecond}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarThird\"\n                                            value={this.state.adhaarThird}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Mandal :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.fetchOrUpdatePHCList}\n                                            id=\"mandal\"\n                                            value={this.state.mandal}\n                                        >\n                                            <option value=\"\">Select Mandal</option>\n                                            <option value=\"Chintoor\">Chintoor</option>\n                                            <option value=\"Yetapaka\">Yetapaka</option>\n                                            <option value=\"Kunnavaram\">Kunnavaram</option>\n                                            <option value=\"VR Puram\">V.R Puram</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>PHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <PHC phcList={this.state.phcList}\n                                            phcValue={this.state.phc}\n                                            fetchVillageSec={this.fetchOrUpdateVillageSecList}\n                                            id=\"phc\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Village Secretariat :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <VillageSec\n                                            id=\"village_sec\"\n                                            villageSecValue={this.state.village_sec}\n                                            villageSecList={this.state.villageSecList}\n                                            fetchVillages={this.fetchOrUpdateVillageList}\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Village :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Village\n                                            updateValue={this.updateState}\n                                            id=\"village\"\n                                            villageList={this.state.villageList}\n                                            villageValue={this.state.village}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>First Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"First Name\"\n                                            id=\"name\"\n                                            onChange={this.handleChange('name')}\n                                            value={this.state.name} />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Surname :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Surname\"\n                                            onChange={this.handleChange('surname')}\n                                            id=\"surname\"\n                                            value={this.state.surname} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>S/o, D/o, W/o:</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"relation\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"son\"\n                                                    id=\"sonOf\"\n                                                    label=\"Son of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"son\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"daughter\"\n                                                    id=\"daughterOf\"\n                                                    label=\"Daughter of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"daughter\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"wife\"\n                                                    id=\"wifeOf\"\n                                                    label=\"Wife of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"wife\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Label>Guardian Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter Name\"\n                                            onChange={this.handleChange('gaurdian_name')}\n                                            id=\"gaurdian_name\"\n                                            value={this.state.gaurdian_name}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"age\">\n                                    <Col sm={3}>\n                                        <Form.Label>Age : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"99\"\n                                            type=\"number\"\n                                            placeholder=\"Enter age\"\n                                            onChange={this.restrictDigits(2)}\n                                            value={this.state.age} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Sex :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"gender\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"M\"\n                                                    id=\"male\"\n                                                    label=\"Male\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"M\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"F\"\n                                                    id=\"female\"\n                                                    label=\"Female\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"F\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NB\"\n                                                    id=\"transgender\"\n                                                    label=\"Transgender\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"MB\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Marital Status :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('maritalstatus')}\n                                            id=\"maritalstatus\"\n                                            value={this.state.maritalstatus}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"single\">Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"separated\">Separated</option>\n                                            <option value=\"divorced\">Divorced</option>\n                                            <option value=\"widowed\">Widowed</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Phone Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999999999\"\n                                            type=\"number\"\n                                            placeholder=\"Enter Contact number\"\n                                            id=\"phone\"\n                                            onChange={this.restrictDigits(10)}\n                                            value={this.state.phone} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"address\">\n                                    <Col sm={3}>\n                                        <Form.Label>Address : </Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <textarea\n                                            placeholder=\"Enter address\"\n                                            value={this.state.address}\n                                            onChange={this.handleChange('address')}\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"bloodgroup\">\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Group :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('bloodgroup')}\n                                            value={this.state.bloodgroup}\n                                        >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"o-\">O-</option>\n                                            <option value=\"o+\">O+</option>\n                                            <option value=\"a-\">A-</option>\n                                            <option value=\"a+\">A+</option>\n                                            <option value=\"b-\">B-</option>\n                                            <option value=\"b+\">B+</option>\n                                            <option value=\"ab-\">AB-</option>\n                                            <option value=\"ab+\">AB+</option>\n                                            <option value=\"N.A.\">Not yet known</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Deworming :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"deworming\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"deworming_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"deworming_no\"\n                                                    label=\"No\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>PVTG :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"PVGT\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"ST\"\n                                                    id=\"pvgt_st\"\n                                                    label=\"ST\"\n                                                    name=\"PVGT\"\n                                                    onChange={this.handleChange('PVGT')}\n                                                    checked={this.state.PVGT === \"ST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NST\"\n                                                    id=\"pvgt_nst\"\n                                                    label=\"Non ST\"\n                                                    name=\"PVGT\"\n                                                    onChange={this.handleChange('PVGT')}\n                                                    checked={this.state.PVGT === \"NST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12} style={styles.center}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validate}>Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BasicDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './TestDetailsForm.css';\n\nclass TestDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateoftesting: props.getValue('dateoftesting'),\n            serumCreatinine: props.getValue('serumCreatinine'),\n            bloodUrea: props.getValue('bloodUrea'),\n            uricAcid: props.getValue('uricAcid'),\n            electrolytes_sodium: props.getValue('electrolytes_sodium'),\n            electrolytes_potassium: props.getValue('electrolytes_potassium'),\n            bun: props.getValue('bun'),\n            pedalEdema: props.getValue('pedalEdema'),\n            pedaltype: props.getValue('pedaltype'),\n            kidneystatus: props.getValue('kidneystatus'),\n            ailments: props.getValue('ailments'),\n            dialysis: props.getValue('dialysis'),\n            doctorreq: props.getValue('doctorreq'),\n            opd: props.getValue('opd'),\n        }\n    }\n\n    validate = () => {\n\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    previous = () => {\n        console.log(this.state)\n        this.saveData().then(() => {\n            this.props.changeData({ formName: \"UserDetails\" });\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateOneDigitAfterDecimalSerumCreatine = event => {\n        if (event.target.value > 2 && event.target.value < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBloodUrea = event => {\n        if (event.target.value > 15 && event.target.value < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalUricAcid = event => {\n        if (event.target.value > 2.6 && event.target.value < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesSodium = event => {\n        if (event.target.value > 135 && event.target.value < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesPotassium = event => {\n        if (event.target.value > 3.5 && event.target.value < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBun = event => {\n        if (event.target.value > 8 && event.target.value < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"HospitalDetails\");\n    }\n\n    mandatoryFieldCheck = () => {\n        let invalidIds = [];\n        try {\n            if (this.state.kidneystatus === 'abnormal') {\n                if (this.state.doctorreq === \"\") {\n                    invalidIds.push('doctorreq')\n                }\n                if (this.state.dialysis === \"\") {\n                    invalidIds.push('dialysis')\n                }\n                if (invalidIds.length > 0) {\n                    window.location.href = \"#\" + invalidIds[0];\n                    for (let i = 0; i < invalidIds.length; i++) {\n                        document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                    }\n                    document.getElementById(invalidIds[0]).focus();\n                    throw new Error();\n                }\n                else {\n                    window.location.href = \"#\";\n                }\n            }\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    validateAndSubmit = () => {\n        // this.mandatoryFieldCheck()\n        let invalidIds = [];\n        // console.log(this.state.serumCreatinine)\n        console.log(this.state)\n        try {\n            if (this.state.kidneystatus === 'abnormal') {\n                // console.log(\"doc req\")\n                // console.log(this.state.doctorreq)\n                if (this.state.doctorreq === \"\") {\n                    invalidIds.push('doctorreq')\n                }\n                if (this.state.dialysis === \"\") {\n                    invalidIds.push('dialysis')\n                }\n                if (invalidIds.length > 0) {\n                    window.location.href = \"#\" + invalidIds[0];\n                    // console.log(\"insid function\")\n                    for (let i = 0; i < invalidIds.length; i++) {\n                        document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                    }\n                    document.getElementById(invalidIds[0]).focus();\n                    throw new Error();\n                }\n                else {\n                    window.location.href = \"#\";\n                }\n            }\n            console.log(this.state)\n            this.saveData()\n            .then(() => {\n                console.log(this.state)\n                this.props.submit();\n            })\n            // console.log(invalidIds[0])\n        }\n        catch (err) {\n            // console.log(false);\n        }\n\n    }\n\n    serumCreatinineAfterReRendering = () => {\n        if (this.state.serumCreatinine > 2 && this.state.serumCreatinine < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (this.state.serumCreatinine > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bloodUreaAfterReRendering = () => {\n        if (this.state.bloodUrea > 15 && this.state.bloodUrea < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bloodUrea > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    uricAcidfterReRendering = () => {\n        if (this.state.uricAcid > 2.6 && this.state.uricAcid < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (this.state.uricAcid > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesSodiumReRendering = () => {\n        if (this.state.electrolytes_sodium > 135 && this.state.electrolytes_sodium < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_sodium > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesPotassiumReRendering = () => {\n        if (this.state.electrolytes_potassium > 3.5 && this.state.electrolytes_potassium < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_potassium > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bunReRendering = () => {\n        if (this.state.bun > 8 && this.state.bun < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bun > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.state)\n        this.serumCreatinineAfterReRendering();\n        this.bloodUreaAfterReRendering();\n        this.uricAcidfterReRendering();\n        this.electrolytesPotassiumReRendering();\n        this.electrolytesSodiumReRendering();\n        this.bunReRendering();\n\n    }\n\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Testing Details</legend>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date of Testing : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"date\" placeholder=\"\" id=\"dateoftesting\" onChange={this.handleChange('dateoftesting')}\n                                            value={this.state.dateoftesting} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Serum Creatinine : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control min=\"0\" type=\"number\" placeholder=\"mg/dl\" id=\"serumCreatinine\" onChange={this.validateOneDigitAfterDecimalSerumCreatine}\n                                            value={this.state.serumCreatinine} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Urea : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bloodUrea\" onChange={this.validateOneDigitAfterDecimalBloodUrea}\n                                            value={this.state.bloodUrea}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Uric Acid : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"uricAcid\" onChange={this.validateOneDigitAfterDecimalUricAcid}\n                                            value={this.state.uricAcid} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Electrolytes </h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sodium(Na) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_sodium\" onChange={this.validateOneDigitAfterDecimalElectrolytesSodium}\n                                            value={this.state.electrolytes_sodium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Potassium(K) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_potassium\" onChange={this.validateOneDigitAfterDecimalElectrolytesPotassium}\n                                            value={this.state.electrolytes_potassium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>BUN (Blood Urea Nitrogen) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bun\" onChange={this.validateOneDigitAfterDecimalBun}\n                                            value={this.state.bun} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={6} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row} >\n                                    <Col sm={6}>\n                                        <Form.Label>Pedal Edema :</Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"Y\"\n                                                    id=\"yes\"\n                                                    label=\"Yes\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"Y\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"N\"\n                                                    id=\"no\"\n                                                    label=\"No\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"N\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6} >\n                                {(() => {\n                                    if (this.state.pedalEdema === 'Y') {\n                                        return (\n                                            <Form.Group as={Row} controlId=\"pedaltype\">\n                                                <Col sm={6}>\n                                                    <Form.Label>Pedal Type :</Form.Label>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <Form.Control as=\"select\" onChange={this.handleChange('pedaltype')} value={this.state.pedaltype}>\n                                                        <option value=\"\">Choose...</option>\n                                                        <option value=\"single leg\">Single Leg</option>\n                                                        <option value=\"bilateral\">Bilateral</option>\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <p></p>\n                                        )\n                                    }\n                                })()}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={3}>\n                                <Form.Label>Kidney Functioning Status :</Form.Label>\n                            </Col>\n                            <Col sm={3}>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"good\"\n                                            id=\"good\"\n                                            label=\"Good\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"good\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"abnormal\"\n                                            id=\"abnormal\"\n                                            label=\"Abnormal\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"abnormal\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {(() => {\n                            if (this.state.kidneystatus === 'good') {\n                                return (\n                                    <Container></Container>\n                                )\n                            }\n                            else if (this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Specify the ailments : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.ailments} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={3}>\n                                                <Form.Label>Need for Dialysis :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"dialysis\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"yes\"\n                                                            label=\"Yes\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"no\"\n                                                            label=\"No\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={4}>\n                                                <Form.Label>Need for immediate Doctor Supervision :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"doctorreq\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"true\"\n                                                            label=\"Yes\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"false\"\n                                                            label=\"No\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    </React.Fragment>\n                                )\n                            }\n                        })()}\n                        <br/>\n                        {(() => {\n                            if (this.state.doctorreq === 'true') {\n                                return (\n                                    <Row>\n                                        <Col sm={4}>\n                                            <Form.Label>Patient Type :</Form.Label>\n                                        </Col>\n                                        <Col sm={3} id=\"opd \">\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"true\"\n                                                        id=\"opd\"\n                                                        label=\"IP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"true\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"false\"\n                                                        id=\"opd\"\n                                                        label=\"OP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"false\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n\n                        {(() => {\n                            if (this.state.opd === 'true') {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndNext}\n                                                className=\"cool-button\"\n                                            >Next</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous.bind(this)}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndSubmit}\n                                                className=\"cool-button\"\n                                            >Submit</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n                    </fieldset>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default TestDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n// import { DateTime } from 'react-datetime-bootstrap';\n\nclass HospitalDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hospitalAdmit: props.getValue('hospitalAdmit'),\n            dateOfAdmit: props.getValue('dateOfAdmit'),\n            refered: props.getValue('refered'),\n            referredto: props.getValue('referredto'),\n            status: props.getValue('status'),\n            treatmentDone: props.getValue('treatmentDone'),\n            dialysis: props.getValue('dialysis'),\n            discharge: props.getValue('discharge'),\n            dischargeStatus: props.getValue('dischargeStatus'),\n            deceased: props.getValue('deceased'),\n            deathDate: props.getValue('deathDate'),\n            placeOfDeath: props.getValue('placeOfDeath'),\n            causeOfDeath: props.getValue('causeOfDeath'),\n            recovery: props.getValue('recovery'),\n            otherReferedHospitalName: \"\",\n            referredToSelected: props.getValue('referredToSelected') ? props.getValue('referredToSelected') : 'false'\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        // this.props.changeData(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        // this.loadNextForm(\"HospitalDetails\");\n        this.props.submit();\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"TestDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    handleReferredTo = event => {\n        let value = event.target.value;\n        if(value === 'other'){\n            this.setState({referredToSelected: 'true'});\n        }\n        else {\n            this.setState({referredto: value});\n        }\n    }\n\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Hospital Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"phc\">\n                                    <Col sm={3}>\n                                        <Form.Label>Hospital admitted in :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hospitalAdmit')}\n                                            value={this.state.hospitalAdmit} >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"PHC/Tulasipaka\">PHC/Tulasipaka</option>\n                                            <option value=\"PHC/E.D Pally\">PHC/E.D Pally</option>\n                                            <option value=\"PHC/Laxmipuram\">PHC/Laxmipuram</option>\n                                            <option value=\"PHC/Nellipaka\">PHC/Nellipaka</option>\n                                            <option value=\"PHC/Gowridevipeta\">PHC/Gowridevipeta</option>\n                                            <option value=\"PHC/Kuturu\">PHC/Kuturu</option>\n                                            <option value=\"PHC/Rekhapally\">PHC/Rekhapally</option>\n                                            <option value=\"PHC/Jeediguppa\">PHC/Jeediguppa</option>\n                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                            <option value=\"other\">other</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date Of Admit :</Form.Label>\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <input type=\"date\" value={this.state.dateOfAdmit} className=\"form-control\" id=\"dateOfAdmit\" onChange={this.handleChange('dateOfAdmit')} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>  Refered To any Hospitals :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"refered_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"refered_no\"\n                                                    label=\"No\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        {(() => {\n                            if (this.state.refered === \"true\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"referredto\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Hospital Refered to :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control\n                                                            as=\"select\"\n\n                                                            onChange={this.handleReferredTo}\n                                                            value={this.state.referredToSelected === 'false' ? this.state.referredto : 'other'} >\n                                                            <option value=\"\">Choose...</option>\n                                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                                            <option value=\"other\">other</option>\n                                                        </Form.Control>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {(() => {\n                                                            if (this.state.referredToSelected === 'true') {\n                                                                return (\n                                                                    <Form.Control as=\"textarea\"\n                                                                        type=\"text\"\n                                    \n                                                                        placeholder=\"Enter Hospital Name\"\n                                                                        onChange={this.handleChange('referredto')}\n                                                                        value={this.state.referredto} />\n                                                                )\n                                                            }\n                                                            else {\n                                                                return (\n                                                                    <p></p>\n                                                                )\n                                                            }\n                                                        })()}\n                                                    </Col>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"status\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Health Status at the time of referring :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Health Status at the time of referring\"\n                                                            onChange={this.handleChange('status')}\n                                                            value={this.state.status} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Need for dialysis :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"true\"\n                                                                    id=\"dialysis_yes\"\n                                                                    label=\"Yes\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"true\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"false\"\n                                                                    id=\"dialysis_no\"\n                                                                    label=\"No\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"false\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Treatment Provided\"\n                                                            onChange={this.handleChange('treatmentDone')}\n                                                            value={this.state.treatmentDone}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"discharge\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {/* <DateTime pickerOptions={{ format: \"LL\" }} /> */}\n                                                        <input type=\"date\" value={this.state.discharge} id=\"discharge\" className=\"form-control\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"recovery\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Recovery Status :</Form.Label>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Control as=\"textarea\" rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the recovery Status at the time of discharge\"\n                                                            onChange={this.handleChange('recovery')}\n                                                            value={this.state.recovery} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            }\n                            else if (this.state.refered === \"false\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control placeholder=\"Enter details\" as=\"textarea\" rows=\"3\" />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <input type=\"date\" className=\"form-control\" id=\"discharge2\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                )\n                            }\n                        })()}\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.previous.bind(this)} >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validateAndNext}>Submit</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default HospitalDetailsForm;\n","import React from 'react';\n\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FormSuccess.css';\n\nexport default function FormSuccess() {\n\n    const redirect = () => {\n        window.location.href = \"/add\";\n    }\n\n    return (\n        <Container>\n            <fieldset style={{textAlign: \"center\"}}>\n                <legend className=\"success-legend\">Success</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Data Saved Sucessfully</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        <Button variant=\"primary\"\n                        onClick={redirect}\n                        className=\"cool-button\"\n                        >\n                            Add another patient\n                        </Button>\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container>\n    )\n}","import React from 'react';\n\nimport BasicDetailsForm from '../BasicDetailsForm/BasicDetailsForm';\nimport TestDetailsForm from '../TestDetailsForm/TestDetailsForm';\nimport HospitalDetailsForm from '../HospitalDetailsForm/HospitalDetailsForm';\n\nimport axios from 'axios';\nimport { uri } from '../../index';\nimport FormSuccess from '../FormSuccess/FormSuccess';\n\nimport { authenticationService } from '../../services';\nimport { authHeader } from '../../helpers';\n\nclass MainForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            formName: \"UserDetails\",\n            pkid: this.generatePkid(32)\n        }\n    }\n\n    generatePkid = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    appendState = (childState, callback) => {\n        if (callback) {\n            this.setState(childState, callback());\n        }\n        else {\n            this.setState(childState);\n        }\n    }\n\n    getValue = (key) => {\n        return this.state[key] === undefined ? \"\" : this.state[key];\n    }\n\n    submitForm = () => {\n        // console.log(\"Inside submit form\");\n        console.log(this.state.pedalEdema)\n        console.log(this.state.pedaltype)\n        console.log(this.state.dateoftesting)\n        console.log(this.state.pedaltype)\n        console.log(this.state.name)\n        console.log(this.state.kid)\n        let  dataToSend = {\n            pkid: this.state.pkid,\n            adhaar: this.state.adhaar,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVGT: this.state.PVGT,\n            dateoftesting: this.state.dateoftesting ? this.state.dateoftesting : \"\",\n            serumCreatinine: this.state.serumCreatinine ? this.state.serumCreatinine : 0,\n            bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n            uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n            electrolytes_sodium: this.state.electrolytes_sodium ? this.state.electrolytes_sodium : 0,\n            electrolytes_potassium: this.state.electrolytes_potassium ? this.state.electrolytes_potassium : 0,\n            bun: this.state.bun ? this.state.bun : 0,\n            pedalEdema: this.state.pedalEdema ? this.state.pedalEdema : \"\",\n            pedaltype: this.state.pedalEdema === 'N' ? \"\" : this.state.pedaltype,\n            kidneystatus: this.state.kidneystatus !== undefined ? this.state.kidneystatus : \"\",\n            ailments: this.state.kidneystatus === \"good\" ? \"\" : this.state.ailments,\n            dialysis: this.state.kidneystatus === \"good\"? false : this.state.dialysis,\n            doctorreq: this.state.kidneystatus === \"good\"? false : this.state.doctorreq,\n            hospitalAdmit: this.state.hospitalAdmit !== undefined ? this.state.hospitalAdmit : \"\",\n            dateOfAdmit: this.state.dateOfAdmit !== undefined ? this.state.dateOfAdmit : \"\",\n            refered: this.state.refered ? this.state.refered : false,\n            referredto: this.state.referred=== \"yes\" ? this.state.referredto : \"\",\n            status: this.state.referred=== \"yes\"  ? this.state.status : \"\",\n            treatmentDone: this.state.referred=== \"yes\" ? this.state.treatmentDone : this.state.treatmentDone,\n            discharge: this.state.referred=== \"no\" ? this.state.discharge : \"\",\n            dischargeStatus: this.state.referred=== \"no\" ? this.state.dischargeStatus : \"\",\n            deceased: this.state.referred=== \"no\"  ? this.state.deceased : false,\n            deathDate: this.state.deceased === \"yes\" ? this.state.deathDate : \"\",\n            placeOfDeath: this.state.deceased=== \"yes\"? this.state.placeOfDeath : \"\",\n            causeOfDeath: this.state.deceased=== \"yes\"? this.state.causeOfDeath : \"\",\n            deworming: this.state.deworming ? this.state.deworming : false,\n            type_data: authenticationService.currentUserValue.firstName === 'test' ? \"Development\" : \"Production\",\n            opd: this.state.opd ? this.state.opd : false\n            //  opd: this.state.doctorreq === 'false'? false : this.state.opd\n        }\n        console.log(this.state.pedaltype)\n        axios.post(uri + 'AddPatient/',\n            dataToSend,\n            {\n                headers: authHeader()\n            }).then(response => {\n                    console.log(dataToSend);\n                    // console.log(\"Sending data\");\n                    // console.log(response);\n                    if (response.data.pkid === this.state.pkid) {\n                        this.setState({}, this.setState({ formName: \"Success\" }));\n                    }\n                    else {\n                        alert(\"Failed to save.. Please Try again\");\n                        // this.setState({ formName: \"Success\" });\n                    }\n                })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        switch (this.state.formName) {\n            case \"UserDetails\":\n                // console.log(this.state);\n                return <BasicDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"TestDetails\":\n                // console.log(this.state);\n                return <TestDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"HospitalDetails\":\n                // console.log(this.state);\n                return <HospitalDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Success\":\n                // console.log(this.state);\n                return <FormSuccess />\n            default:\n                return \"\";\n        }\n    }\n}\n\nexport default MainForm;\n","import React from 'react';\n\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport './GenericTable.css';\n\n//Received props\n//Json data -- data\n//List of headings -- headers\n//List of Json keys to be displayed under each heading -- keys\n//List of data types for each column for making filters -- dataTypes\n//All list should be of equal lengths and in same sequence. Otherwise table will show unpredictable behaviour\n//loading -- loading\n\nclass GenericTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noOfRows: \"\",\n            currentPageIndex: 0\n        }\n    }\n\n    componentDidMount() {\n        let stateObj = {};\n        let { dataTypes, keys } = this.props;\n        for (let i = 0; i < dataTypes.length; i++) {\n            if (dataTypes[i] === 'Number') {\n                stateObj['KEY_' + keys[i]] = {                  //Appending KEY_ to prevent data overwrite if any props key matches our internal state key\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n            }\n            else if (dataTypes[i] === 'String') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n            else if (dataTypes[i] === 'Boolean') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n        }\n        this.setState(stateObj);\n    }\n\n    handleSearchChange = event => {\n        let idFragments = event.target.id.split('_');\n        let obj = {};\n        let key = idFragments[1];\n        let dataType = this.props.dataTypes[this.props.keys.indexOf(key)];\n\n        if (dataType === 'String') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        else if (dataType === 'Number') {\n            obj['KEY_' + key] = this.state['KEY_' + key];\n            if (event.target.value === \"\") {\n                obj['KEY_' + key][idFragments[2]] = idFragments[2] === 'min' ? Number.MIN_VALUE : Number.MAX_VALUE;\n            }\n            else {\n                obj['KEY_' + key][idFragments[2]] = Number(event.target.value);\n            }\n        }\n        else if (dataType === 'Boolean') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        this.setState(obj);\n    }\n\n    isNotNullOrUndefinedOrBlank = (value) => {\n        return (value !== null && value !== undefined && value !== \"\");\n    }\n\n    clearFilters = () => {\n        let { dataTypes, keys } = this.props;\n        let obj = {};\n        for (let i = 0; i < keys.length; i++) {\n            if (dataTypes[i] === \"String\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n            else if (dataTypes[i] === \"Number\") {\n                obj['KEY_' + keys[i]] = {\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n                document.getElementById('KEY_' + keys[i] + '_min').value = \"\";\n                document.getElementById('KEY_' + keys[i] + '_max').value = \"\";\n            }\n            else if (dataTypes[i] === \"Boolean\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n        }\n        this.setState(obj);\n    }\n\n    changeNoOfRows = event => {\n        if(event.target.value !== \"\"){\n            event.target.value = Math.abs(event.target.value);\n        }\n        this.setState({ noOfRows: event.target.value });\n    }\n\n    nextPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex + 1 });\n    }\n\n    previousPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex - 1 });\n    }\n\n    render() {\n        let { headers, data, loading, keys, dataTypes } = this.props;\n        let pageData = [];\n        let { noOfRows, currentPageIndex } = this.state;\n        let dataLength = 0;\n        let lastPageIndex = 0;\n\n        if (!loading) {\n\n            dataLength = data.length;\n            if(noOfRows !== \"\"){\n                if(dataLength % noOfRows === 0){\n                    lastPageIndex = Math.floor(dataLength / noOfRows) - 1;\n                }\n                else{\n                    lastPageIndex = Math.floor(dataLength / noOfRows);\n                }\n            }\n\n            if(noOfRows === \"\"){\n                pageData = data;\n            }\n            else if (dataLength >= (currentPageIndex + 1) * noOfRows) {\n                pageData = data.slice(currentPageIndex * noOfRows, (currentPageIndex + 1) * noOfRows);\n            }\n            else {\n                pageData = data.slice(currentPageIndex * noOfRows, dataLength);\n            }\n\n            pageData = pageData.filter(rowData => {\n                for (let i = 0; i < keys.length; i++) {\n                    if (dataTypes[i] === \"String\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && !rowData[keys[i]].toLowerCase().includes(this.state['KEY_' + keys[i]].toLowerCase())) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Number\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && (rowData[keys[i]] < this.state['KEY_' + keys[i]].min || rowData[keys[i]] > this.state['KEY_' + keys[i]].max)) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Boolean\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]].toString()) && this.isNotNullOrUndefinedOrBlank(this.state['KEY_' + keys[i]]) && (rowData[keys[i]].toString() !== this.state['KEY_' + keys[i]].toString())) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm={3} xs={4} >\n                        <Button variant=\"danger\" onClick={this.clearFilters} className=\"filter-button\">\n                            Clear filter\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"previousButton\" onClick={this.previousPage} disabled={currentPageIndex === 0} >\n                            Previous Page\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"nextButton\" onClick={this.nextPage} disabled={currentPageIndex >= lastPageIndex}>\n                            Next Page\n                        </Button>\n                    </Col>\n                    \n                    <Col sm={3}>\n                        <input type=\"number\" min=\"1\" value={this.state.noOfRows} placeholder=\"No. of Rows\" onChange={this.changeNoOfRows} className=\"row-input-field\" />\n                    </Col>\n                </Row>\n                <Table style={{ textAlign: \"center\" }} striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            {\n                                headers.map((header, index) => {\n                                    return (\n                                        <td key={index}>{header}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (() => {\n                                if (loading) {\n                                    return (\n                                        <tr>\n                                            <td colSpan={headers.length}>\n                                                Loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <React.Fragment>\n                                            <tr key=\"searchFields\">\n                                                {\n                                                    keys.map((key, i) => {\n                                                        let inputType = \"text\";\n                                                        if (dataTypes[i] === 'Number') {\n                                                            inputType = \"number\";\n                                                        }\n                                                        if (dataTypes[i] === 'Boolean') {\n                                                            inputType = \"booleanSelect\";\n                                                        }\n                                                        if (inputType === \"text\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key}\n                                                                        placeholder=\"Filter\"\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"number\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_min'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Min\"\n                                                                        className=\"form-control input-min\"\n                                                                    />\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_max'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Max\"\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"booleanSelect\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <select\n                                                                        value={this.state['KEY_' + key]}\n                                                                        id={'KEY_' + key}\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"Yes\">Yes</option>\n                                                                        <option value=\"No\">No</option>\n                                                                    </select>\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else {\n                                                            return (\n                                                                <td></td>\n                                                            )\n                                                        }\n                                                    })\n                                                }\n                                            </tr>\n                                            {\n                                                (() => {\n                                                    if (pageData.length === 0) {\n                                                        return (\n                                                            <tr>\n                                                                <td colSpan={headers.length}>\n                                                                    Nothing found to display.\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    else {\n                                                        return (\n                                                            pageData.map((row, indexRow) => {\n                                                                return (\n                                                                    <tr key={indexRow}>\n                                                                        {\n                                                                            keys.map((key, indexCol) => {\n                                                                                return (\n                                                                                    <td key={indexCol}>\n                                                                                        {row[key] ? row[key].toString() : \"\"}\n                                                                                    </td>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                        )\n                                                    }\n                                                })()\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n                            })()\n                        }\n                    </tbody>\n                </Table>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GenericTable;\n","import React from 'react';\n\nimport { Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport './Directory.css';\nimport GenericTable from '../GenericTable/GenericTable';\n\nimport { authHeader } from '../../helpers';\n\nclass Directory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchField: \"\",\n            patientList: [],\n            villageList: [],\n            loading: true\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetAllPatient/',\n            {\n                headers: authHeader()\n        }).then(response => {\n                    // console.log(response);\n                    axios.get(this.uri + 'GetAllVillage/', \n                    {\n                        headers: authHeader()\n                    }).then(responseVillage => {\n                        // this.setState({ villageList: responseVillage.data });\n                        // this.setState({ loading: false });\n                        this.setState(\n                            {\n                                patientList: response.data,\n                                villageList: responseVillage.data,\n                                loading: false\n                            }\n                        )\n                    })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                    // this.setState({ patientList: response.data });\n                })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getVillageNameFromId = (id) => {\n        // console.log(\"Id received \" + id);\n        let { villageList } = this.state;\n        if (villageList.length > 0) {\n            for (let i = 0; i < villageList.length; i++) {\n                if (villageList[i].village_id === id) {\n                    return villageList[i].name;\n                }\n            }\n        }\n    }\n\n    render() {\n        const headers = ['Name', 'Village', 'Kidney Status', 'Deceased'];\n        const keys = ['fullName', 'village', 'kidneystatus', 'deceased'];\n        const dataTypes = ['String', 'String', 'String', 'Boolean'];\n        let structuredData = this.state.patientList.map(patient => {\n            let newPatient = { ...patient };\n            newPatient.village = this.getVillageNameFromId(patient.village);\n            newPatient[\"fullName\"] = newPatient.name + ' ' + newPatient.surname;\n            newPatient.deceased = newPatient.deceased ? \"Yes\" : \"No\";\n            return newPatient;\n        });\n\n        return (\n            <Container style={{ marginTop: \"2rem\" }}>\n                <GenericTable data={structuredData} loading={this.state.loading} headers={headers} keys={keys} dataTypes={dataTypes} />\n            </Container>\n        )\n    }\n}\n\nexport default Directory;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Error404() {\n\n    var seconds = 3;\n\n    setInterval(() => {\n        seconds--;\n        document.getElementById('seconds').innerHTML = seconds;\n        if(seconds === 0){\n            clearInterval();\n            window.location.href = \"/\";\n        }\n    }, 1000);\n\n    return (\n        <Container>\n            <fieldset style={{ textAlign: \"center\" }}>\n                <legend className=\"success-legend\">Error 404</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faTimesCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Page Not Found</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        Redirecting to homepage in <span id=\"seconds\">{seconds}</span> seconds...\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container >\n    )\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport './Header.css'\n\nimport { faHome, faChartLine, faUserPlus, faInfoCircle, faList } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { authenticationService } from '../../services';\n\nimport logo from '../../assets/logo_transparent.png';\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<img alt=\"TracerIND\" src={logo} />\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} color=\"white\" /> &nbsp;Home\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/dashboard\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartLine} color=\"white\" /> &nbsp;Dashboard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/add\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus} color=\"white\" /> &nbsp;New Patient\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/directory\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faList} color=\"white\" /> &nbsp;Directory\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/about\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} color=\"white\" /> &nbsp;About\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Button className=\"cool-button\" style={{border: \"none\"}} onClick={authenticationService.logout}>Logout</Button>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport Header from '../Header/Header';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <React.Fragment>\n            <Header />\n            <Component {...props} />\n        </React.Fragment>\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './Login.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { authenticationService } from '../../services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n        if (authenticationService.currentUserValue) {\n            this.props.history.push('/');\n        }\n    }\n\n    login = () => {\n        let { username, password } = this.state;\n        authenticationService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        return (\n            <Container style={{ marginTop: \"10vh\", textAlign: \"center\" }}>\n                <Row className=\"heading\">\n                    <Col>\n                        <h2>Welcome to TracerIND</h2>\n                    </Col>\n                </Row>\n                <fieldset style={{ marginTop: \"10vh\"}}>\n                    <legend>Enter your Login Details</legend>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"username\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Username :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter username\" onChange={this.handleChange('username')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"password\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Password :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter password\" type=\"password\" onChange={this.handleChange('password')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                        <Col>\n                            <Button className=\"cool-button\" size=\"lg\" onClick={this.login}>Login</Button>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MainForm from './components/MainForm/MainForm';\nimport Directory from './components/Directory/Directory';\nimport Error404 from './components/Error404/Error404';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Login from './components/Login/Login';\nimport { history } from './helpers';\nimport { authenticationService } from './services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    // console.log(\"Inside component did mount\");\n    authenticationService.currentUser.subscribe(x => this.setState({ currentUser: x }, this.refreshAuth));\n  }\n\n  refreshAuth = () => {\n    let { currentUser } = this.state;\n    if (currentUser) {\n      let msecDifference = new Date().getTime() - new Date(this.state.currentUser.timestamp).getTime();\n      if (msecDifference / (1000 * 60 * 60) > 3) {\n        authenticationService.refresh();\n      }\n    }\n  }\n\n  logout() {\n    authenticationService.logout();\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/about\" component={About} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/add\" component={MainForm} />\n            <PrivateRoute exact path=\"/directory\" component={Directory} />\n            <Route component={Error404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'test', lastName: 'test' },\n        { id: 2, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureFakeBackend } from './helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport const uri = process.env.REACT_APP_SERVER_URI;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.e386adfe.png\";"],"sourceRoot":""}